name: Terraform CI

on:
  pull_request:
    branches:
      - main

jobs:

  lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Terraform Init
        run: terraform init

      - name: Run TFLint
        run: |
          tflint > tflint.log || echo "::warning::TFLint failed"

      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            ## TFLint Results
            ```
            ${{ steps.tflint.outputs.stdout }}
            ```
          repo-token: ${{ secrets.PERSONAL_TOKEN }}


      - name: Terraform Format Check
        run: terraform fmt -check -recursive || echo "::warning::Terraform fmt failed"

      - name: Terraform Validate
        run: terraform validate || echo "::warning::Terraform validate failed"


  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        run: terraform init

      - name: tfsec security scan
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working_directory: ./ec2-project


  plan:
    name: Terraform Plan
    needs: [lint, security]
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.plan.outputs.plan }}
      exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color > tfplan.txt
          exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          echo "plan<<EOF" >> $GITHUB_OUTPUT
          cat tfplan.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment Plan
        uses: GetTerminus/terraform-pr-commenter@v1
        with:
          commenter_type: plan
          commenter_input: ${{ steps.plan.outputs.plan }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          terraform_version: 1.8.0


  build_artifact:
    name: Build Artifact
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Zip artifact
        run: zip -r terraform-build.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-artifact
          path: terraform-build.zip

      - name: Generate Tag
        id: tag
        run: |
          LAST_TAG=$(git tag --sort=-version:refname | head -n 1)
          NEXT_TAG=$(echo $LAST_TAG | awk -F. -v OFS=. '{$NF += 1; print}')
          echo "tag=$NEXT_TAG" >> $GITHUB_OUTPUT

      - uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false

      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            **Release created**
            Tag: `${{ steps.tag.outputs.tag }}`
