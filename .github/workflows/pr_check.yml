name: Terraform PR Checks

on:
  pull_request:
    branches:
      - main


jobs:

  lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Terraform Init
        working-directory: ./ec2-project
        run: terraform init

      - name: Run TFLint
        working-directory: ./ec2-project
        run: tflint --init && tflint


      - name: Terraform Format Check
        working-directory: ./ec2-project
        run: terraform fmt -check -recursive || echo "::warning::Terraform fmt failed"

      - name: Terraform Format Fix
        run: terraform fmt -recursive

      - name: Terraform Validate
        working-directory: ./ec2-project
        run: terraform validate || echo "::warning::Terraform validate failed"


  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        working-directory: ./ec2-project
        run: terraform init

      - name: tfsec security scan
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working_directory: ./ec2-project


  plan:
    name: Terraform Plan
    needs: [lint, security]
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.plan.outputs.plan }}
      exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        working-directory: ./ec2-project
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: ./ec2-project
        run: |
          mkdir -p ./terraform_plans
          terraform plan -lock=false -input=false -no-color -out=./terraform_plans/tfplan.binary
          terraform show -no-color ./terraform_plans/tfplan.binary > ./terraform_plans/plan.txt
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Comment Terraform Plan Output
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./ec2-project/terraform_plans/plan.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan Output for \`ec2-instance\`\n\n\`\`\`hcl\n${planOutput}\n\`\`\``
            });









